basePath: /
definitions:
  delivery.changePasswordStruct:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  delivery.docsUserForGetProfile:
    properties:
      about:
        type: string
      avatar:
        type: string
      create_date:
        type: string
      email:
        type: string
      id:
        type: integer
      last_seen_date:
        type: string
      name:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  delivery.updateUserStruct-delivery_docsUserForGetProfile:
    properties:
      numOfUpdatedFields:
        type: integer
      user:
        $ref: '#/definitions/delivery.docsUserForGetProfile'
    type: object
  domain.Chat:
    properties:
      avatar:
        type: string
      creator:
        type: string
      description:
        type: string
      id:
        type: integer
      last_message:
        $ref: '#/definitions/domain.Message'
      messages:
        items:
          $ref: '#/definitions/domain.Message'
        type: array
      name:
        type: string
      type:
        type: string
      users:
        items:
          $ref: '#/definitions/domain.ChatUser'
        type: array
    type: object
  domain.ChatUser:
    properties:
      chat_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.Chats:
    properties:
      chats:
        items:
          $ref: '#/definitions/domain.Chat'
        type: array
    type: object
  domain.Error:
    properties:
      error:
        example: error description
        type: string
    type: object
  domain.Message:
    properties:
      chat_id:
        type: integer
      edited:
        type: boolean
      id:
        type: integer
      message_text:
        type: string
      sent_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.Person:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.Response-delivery_docsUserForGetProfile:
    properties:
      body:
        $ref: '#/definitions/delivery.docsUserForGetProfile'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-domain_Chats:
    properties:
      body:
        $ref: '#/definitions/domain.Chats'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-domain_Error:
    properties:
      body:
        $ref: '#/definitions/domain.Error'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-int:
    properties:
      body:
        type: integer
      status:
        example: 200
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  title: Messenger authorization API
  version: "1.0"
paths:
  /changePassword:
    post:
      consumes:
      - application/json
      operationId: ChangePassword
      parameters:
      - description: Old and new passwords
        in: body
        name: Password
        required: true
        schema:
          $ref: '#/definitions/delivery.changePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: passwords are empty
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: changes profile password
  /checkAuth:
    get:
      operationId: checkAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: checks that user is authenticated
  /getChats:
    get:
      operationId: GetChats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-domain_Chats'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets Chats previews for user
  /getProfileInfo:
    get:
      operationId: GetProfileInfo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_docsUserForGetProfile'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets profile info
  /login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: wrong json structure | user not found | wrong password
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: logs user in
  /logout:
    get:
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: no session to logout
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: logs user out
  /register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: user already exists | required field empty | wrong json structure
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: registers user
  /updateProfileInfo:
    post:
      consumes:
      - application/json
      operationId: UpdateProfileInfo
      parameters:
      - description: Send only the updated fields, and number of them
        in: body
        name: userAndNumOfUpdatedFields
        required: true
        schema:
          $ref: '#/definitions/delivery.updateUserStruct-delivery_docsUserForGetProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: updates profile info
  /uploadAvatar:
    post:
      consumes:
      - multipart/form-data
      operationId: UploadAvatar
      parameters:
      - description: avatar image
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Описание ошибки
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: uploads or changes avatar
schemes:
- http
swagger: "2.0"
