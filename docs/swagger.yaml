basePath: /
definitions:
  delivery.addContactStruct:
    properties:
      username_of_user_to_add:
        type: string
    type: object
  delivery.changePasswordStruct:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  delivery.chatIDIsNewJsonResponse:
    properties:
      chat_id:
        type: integer
      is_new_chat:
        type: boolean
    type: object
  delivery.chatIDStruct:
    properties:
      chat_id:
        type: integer
    type: object
  delivery.chatJsonResponse:
    properties:
      chat:
        $ref: '#/definitions/domain.Chat'
    type: object
  delivery.createChannelJson:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  delivery.createGroupJson:
    properties:
      description:
        type: string
      group_name:
        type: string
      user_ids:
        items:
          type: integer
        type: array
    type: object
  delivery.deleteChatJsonResponse:
    properties:
      successfully_deleted:
        type: boolean
    type: object
  delivery.deleteMessageRequest:
    properties:
      message_id:
        type: integer
    type: object
  delivery.docsContacts:
    properties:
      contacts:
        items:
          $ref: '#/definitions/delivery.docsUserForGetProfile'
        type: array
    type: object
  delivery.docsUserForGetProfile:
    properties:
      about:
        type: string
      avatar:
        type: string
      create_date:
        type: string
      email:
        type: string
      id:
        type: integer
      last_seen_date:
        type: string
      name:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  delivery.editMessageRequest:
    properties:
      message_id:
        type: integer
      new_message_text:
        type: string
    type: object
  delivery.getPopularChannelsResponse:
    properties:
      channels:
        items:
          $ref: '#/definitions/domain.ChannelWithCounter'
        type: array
    type: object
  delivery.requestChatIDBody:
    properties:
      chat_id:
        type: integer
    type: object
  delivery.updateChatJson:
    properties:
      chat_id:
        type: integer
      new_description:
        type: string
      new_name:
        type: string
    type: object
  delivery.updateUserStruct-delivery_docsUserForGetProfile:
    properties:
      numOfUpdatedFields:
        type: integer
      user:
        $ref: '#/definitions/delivery.docsUserForGetProfile'
    type: object
  delivery.userIDJson:
    properties:
      user_id:
        type: integer
    type: object
  domain.ChannelWithCounter:
    properties:
      avatar:
        type: string
      creator:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_member:
        type: boolean
      name:
        type: string
      numOfUsers:
        type: integer
    type: object
  domain.Chat:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      creator:
        type: integer
      description:
        type: string
      edited_at:
        type: string
      id:
        type: integer
      last_action_date_time:
        type: string
      last_message:
        $ref: '#/definitions/domain.Message'
      last_seen_message_id:
        type: integer
      messages:
        items:
          $ref: '#/definitions/domain.Message'
        type: array
      name:
        type: string
      type:
        type: string
      users:
        items:
          $ref: '#/definitions/domain.ChatUser'
        type: array
    type: object
  domain.ChatUser:
    properties:
      chat_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.Chats:
    properties:
      chats:
        items:
          $ref: '#/definitions/domain.Chat'
        type: array
    type: object
  domain.Error:
    properties:
      error:
        example: error description
        type: string
    type: object
  domain.FileInMessage:
    properties:
      original_name:
        type: string
      path:
        type: string
      type:
        type: string
    type: object
  domain.Message:
    properties:
      chat_id:
        type: integer
      file:
        $ref: '#/definitions/domain.FileInMessage'
      message_text:
        type: string
      username:
        type: string
    type: object
  domain.Messages:
    properties:
      messages:
        items:
          $ref: '#/definitions/domain.Message'
        type: array
    type: object
  domain.Person:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.Response-delivery_chatIDIsNewJsonResponse:
    properties:
      body:
        $ref: '#/definitions/delivery.chatIDIsNewJsonResponse'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_chatIDStruct:
    properties:
      body:
        $ref: '#/definitions/delivery.chatIDStruct'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_chatJsonResponse:
    properties:
      body:
        $ref: '#/definitions/delivery.chatJsonResponse'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_deleteChatJsonResponse:
    properties:
      body:
        $ref: '#/definitions/delivery.deleteChatJsonResponse'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_docsContacts:
    properties:
      body:
        $ref: '#/definitions/delivery.docsContacts'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_docsUserForGetProfile:
    properties:
      body:
        $ref: '#/definitions/delivery.docsUserForGetProfile'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-delivery_getPopularChannelsResponse:
    properties:
      body:
        $ref: '#/definitions/delivery.getPopularChannelsResponse'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-domain_Chats:
    properties:
      body:
        $ref: '#/definitions/domain.Chats'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-domain_Error:
    properties:
      body:
        $ref: '#/definitions/domain.Error'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-domain_Messages:
    properties:
      body:
        $ref: '#/definitions/domain.Messages'
      status:
        example: 200
        type: integer
    type: object
  domain.Response-int:
    properties:
      body:
        type: integer
      status:
        example: 200
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  title: Messenger authorization API
  version: "1.0"
paths:
  /addContact:
    post:
      consumes:
      - application/json
      operationId: AddContact
      parameters:
      - description: username of user to add to contacts
        in: body
        name: usernameToAdd
        required: true
        schema:
          $ref: '#/definitions/delivery.addContactStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Описание ошибки
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: adds contact for user
  /changePassword:
    post:
      consumes:
      - application/json
      operationId: ChangePassword
      parameters:
      - description: Old and new passwords
        in: body
        name: Password
        required: true
        schema:
          $ref: '#/definitions/delivery.changePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: passwords are empty
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: changes profile password
  /checkAuth:
    get:
      operationId: checkAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: checks that user is authenticated
  /createChannel:
    post:
      consumes:
      - application/json
      operationId: CreateChannel
      parameters:
      - description: IDs of users to create group chat with
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.createChannelJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_chatIDStruct'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: creates channel
  /createGroupChat:
    post:
      consumes:
      - application/json
      operationId: CreateGroupChat
      parameters:
      - description: IDs of users to create group chat with
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.createGroupJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_chatIDStruct'
        "400":
          description: Person not authorized | Пользователь, с которым вы хотите создать
            дилаог, не найден | Чат с этим пользователем уже существует
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: creates group chat
  /createPrivateChat:
    post:
      consumes:
      - application/json
      operationId: CreatePrivateChat
      parameters:
      - description: ID of person to create private chat with
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.userIDJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_chatIDIsNewJsonResponse'
        "400":
          description: Person not authorized | Пользователь, с которым вы хотите создать
            дилаог, не найден | Чат с этим пользователем уже существует
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: creates dialogue
  /deleteChat:
    post:
      consumes:
      - application/json
      operationId: DeleteChat
      parameters:
      - description: ID of chat to delete
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.chatIDStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_deleteChatJsonResponse'
        "400":
          description: Person not authorized | User doesn't belong to chat
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: deletes chat
  /deleteMessage:
    post:
      consumes:
      - application/json
      operationId: deleteMessage
      parameters:
      - description: ID of message to delete
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.deleteMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: wrong json structure
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: DeleteMessage
  /editMessage:
    post:
      consumes:
      - application/json
      operationId: editMessage
      parameters:
      - description: ID of chat
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.editMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: wrong json structure
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: EditMessage
  /getChat:
    post:
      consumes:
      - application/json
      operationId: GetChat
      parameters:
      - description: id of chat to get
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.chatIDStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_chatJsonResponse'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets one chat
  /getChats:
    get:
      operationId: GetChats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-domain_Chats'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets Chats previews for user
  /getContacts:
    get:
      operationId: GetContacts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_docsContacts'
        "400":
          description: Описание ошибки
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: returns contacts of user
  /getMessages:
    post:
      consumes:
      - application/json
      operationId: getChatMessages
      parameters:
      - description: ID of chat
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.requestChatIDBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-domain_Messages'
        "400":
          description: wrong json structure
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: GetMessages
  /getPopularChannels:
    get:
      operationId: GetPopularChannels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_getPopularChannelsResponse'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets 10 popular channels
  /getProfileInfo:
    get:
      operationId: GetProfileInfo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-delivery_docsUserForGetProfile'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: gets profile info
  /joinChannel:
    post:
      consumes:
      - application/json
      operationId: JoinChannel
      parameters:
      - description: id of channel
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.chatIDStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: joins channel
  /leaveChannel:
    post:
      consumes:
      - application/json
      operationId: LeaveChannel
      parameters:
      - description: id of channel
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.chatIDStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: exits from channel
  /login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: wrong json structure | user not found | wrong password
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: logs user in
  /logout:
    get:
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: no session to logout
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: logs user out
  /register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: user already exists | required field empty | wrong json structure
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: registers user
  /sendMessage:
    post:
      consumes:
      - application/json
      description: Сначала по этому URL надо произвести upgrade до вебсокета, потом
        слать json сообщений
      operationId: sendMessage
      parameters:
      - description: message that was sent
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "500":
          description: Internal server error | could not upgrade connection
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: SendMessage
  /updateGroupChat:
    post:
      consumes:
      - application/json
      operationId: UpdateGroupChat
      parameters:
      - description: updated chat (если имя или описание не обновлялось, поле не слать
          вообще)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.updateChatJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: updates group chat
  /updateProfileInfo:
    post:
      consumes:
      - application/json
      operationId: UpdateProfileInfo
      parameters:
      - description: Send only the updated fields, and number of them
        in: body
        name: userAndNumOfUpdatedFields
        required: true
        schema:
          $ref: '#/definitions/delivery.updateUserStruct-delivery_docsUserForGetProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: updates profile info
  /uploadAvatar:
    post:
      consumes:
      - multipart/form-data
      operationId: UploadAvatar
      parameters:
      - description: avatar image
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Описание ошибки
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: uploads or changes avatar
  /uploadFiles:
    post:
      consumes:
      - multipart/form-data
      operationId: SetFile
      parameters:
      - description: file to upload
        in: formData
        name: files
        required: true
        type: file
      - description: json with data (message_text,chat_id,type); type должен быть
          file
        in: formData
        name: json
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Response-int'
        "400":
          description: Person not authorized
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/domain.Response-domain_Error'
      summary: sets array of files
schemes:
- http
swagger: "2.0"
