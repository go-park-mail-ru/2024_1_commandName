basePath: /
definitions:
  models.Error:
    properties:
      error:
        example: error description
        type: string
    type: object
  models.ErrorResponse:
    properties:
      body:
        $ref: '#/definitions/models.Error'
      status:
        example: 400
        type: integer
    type: object
  models.Person:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Response:
    properties:
      body: {}
      status:
        example: 200
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  title: Messenger authorization API
  version: "1.0"
paths:
  /checkAuth:
    get:
      operationId: checkAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Person not authorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: checks that user is authenticated
  /login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: wrong json structure | user not found | wrong password
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: logs user in
  /logout:
    get:
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: no session to logout
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: logs user out
  /register:
    post:
      consumes:
      - application/json
      operationId: register
      parameters:
      - description: Person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: user already exists | required field empty | wrong json structure
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "405":
          description: use POST
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: registers user
schemes:
- http
swagger: "2.0"
