// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package delivery

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery(in *jlexer.Lexer, out *firebaseToken) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "token":
			out.Token = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery(out *jwriter.Writer, in firebaseToken) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"token\":"
		out.RawString(prefix[1:])
		out.String(string(in.Token))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v firebaseToken) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v firebaseToken) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *firebaseToken) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *firebaseToken) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery(l, v)
}
func easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery1(in *jlexer.Lexer, out *docsUserForGetProfile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint(in.Uint())
		case "username":
			out.Username = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "surname":
			out.Surname = string(in.String())
		case "about":
			out.About = string(in.String())
		case "create_date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreateDate).UnmarshalJSON(data))
			}
		case "last_seen_date":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LastSeenDate).UnmarshalJSON(data))
			}
		case "avatar":
			out.Avatar = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery1(out *jwriter.Writer, in docsUserForGetProfile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint(uint(in.ID))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"surname\":"
		out.RawString(prefix)
		out.String(string(in.Surname))
	}
	{
		const prefix string = ",\"about\":"
		out.RawString(prefix)
		out.String(string(in.About))
	}
	{
		const prefix string = ",\"create_date\":"
		out.RawString(prefix)
		out.Raw((in.CreateDate).MarshalJSON())
	}
	{
		const prefix string = ",\"last_seen_date\":"
		out.RawString(prefix)
		out.Raw((in.LastSeenDate).MarshalJSON())
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v docsUserForGetProfile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v docsUserForGetProfile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *docsUserForGetProfile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *docsUserForGetProfile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery1(l, v)
}
func easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery2(in *jlexer.Lexer, out *docsContacts) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "contacts":
			if in.IsNull() {
				in.Skip()
				out.Contacts = nil
			} else {
				in.Delim('[')
				if out.Contacts == nil {
					if !in.IsDelim(']') {
						out.Contacts = make([]docsUserForGetProfile, 0, 0)
					} else {
						out.Contacts = []docsUserForGetProfile{}
					}
				} else {
					out.Contacts = (out.Contacts)[:0]
				}
				for !in.IsDelim(']') {
					var v1 docsUserForGetProfile
					(v1).UnmarshalEasyJSON(in)
					out.Contacts = append(out.Contacts, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery2(out *jwriter.Writer, in docsContacts) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"contacts\":"
		out.RawString(prefix[1:])
		if in.Contacts == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Contacts {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v docsContacts) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v docsContacts) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *docsContacts) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *docsContacts) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery2(l, v)
}
func easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery3(in *jlexer.Lexer, out *changePasswordStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "oldPassword":
			out.OldPassword = string(in.String())
		case "newPassword":
			out.NewPassword = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery3(out *jwriter.Writer, in changePasswordStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"oldPassword\":"
		out.RawString(prefix[1:])
		out.String(string(in.OldPassword))
	}
	{
		const prefix string = ",\"newPassword\":"
		out.RawString(prefix)
		out.String(string(in.NewPassword))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v changePasswordStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v changePasswordStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *changePasswordStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *changePasswordStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery3(l, v)
}
func easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery4(in *jlexer.Lexer, out *addContactStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username_of_user_to_add":
			out.UsernameOfUserToAdd = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery4(out *jwriter.Writer, in addContactStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username_of_user_to_add\":"
		out.RawString(prefix[1:])
		out.String(string(in.UsernameOfUserToAdd))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v addContactStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v addContactStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson74f77b5eEncodeProjectMessengerInternalProfileDelivery4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *addContactStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *addContactStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson74f77b5eDecodeProjectMessengerInternalProfileDelivery4(l, v)
}
